{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AugyT\\\\Documents\\\\GitHub\\\\blog_react\\\\myblog\\\\src\\\\pages\\\\ArticlePage.js\";\nimport React, { useState, useEffect } from 'react';\nimport articleContent from './article-content';\nimport ArticlesList from '../components/ArticlesList';\nimport NotFoundPage from '../pages/NotFoundPage';\nimport CommentsList from '../components/CommentsList';\nimport UpvotesSection from '..components/UpvotesSection';\n\nconst ArticlePage = ({\n  match\n}) => {\n  const name = match.params.name;\n  const article = articleContent.find(article => article.name === name);\n  const [articleInfo, setArticleInfo] = useState({\n    upvotes: 0,\n    comments: []\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/articles/${name}`);\n      const body = await result.json();\n      console.log(body);\n      setArticleInfo(body);\n    };\n\n    fetchData();\n  }, [name]);\n  if (!article) return /*#__PURE__*/React.createElement(NotFoundPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 26\n    }\n  });\n  const otherArticles = articleContent.filter(article => article.name !== name);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, article.title, \" article\"), article.content.map((paragraph, key) => /*#__PURE__*/React.createElement(\"p\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, paragraph)), /*#__PURE__*/React.createElement(CommentsList, {\n    comments: articleInfo.comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"Other Articles\"), /*#__PURE__*/React.createElement(ArticlesList, {\n    articles: otherArticles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default ArticlePage;","map":{"version":3,"sources":["C:/Users/AugyT/Documents/GitHub/blog_react/myblog/src/pages/ArticlePage.js"],"names":["React","useState","useEffect","articleContent","ArticlesList","NotFoundPage","CommentsList","UpvotesSection","ArticlePage","match","name","params","article","find","articleInfo","setArticleInfo","upvotes","comments","fetchData","result","fetch","body","json","console","log","otherArticles","filter","title","content","map","paragraph","key"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAI/B,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,QAAME,OAAO,GAAGT,cAAc,CAACU,IAAf,CAAoBD,OAAO,IAAIA,OAAO,CAACF,IAAR,KAAiBA,IAAhD,CAAhB;AAEJ,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC;AAACe,IAAAA,OAAO,EAAC,CAAT;AAAYC,IAAAA,QAAQ,EAAC;AAArB,GAAD,CAA9C;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgB,SAAS,GAAG,YAAW;AACzB,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,iBAAgBV,IAAK,EAAvB,CAA1B;AACA,YAAMW,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAN,MAAAA,cAAc,CAACM,IAAD,CAAd;AACH,KALD;;AAMIH,IAAAA,SAAS;AAChB,GARQ,EAQP,CAACR,IAAD,CARO,CAAT;AASI,MAAI,CAACE,OAAL,EAAc,oBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAGd,QAAMa,aAAa,GAAGtB,cAAc,CAACuB,MAAf,CAAsBd,OAAO,IAAIA,OAAO,CAACF,IAAR,KAAiBA,IAAlD,CAAtB;AACA,sBACI,uDACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,OAAO,CAACe,KAAb,aADJ,EAEKf,OAAO,CAACgB,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,SAAD,EAAYC,GAAZ,kBACjB;AAAG,IAAA,GAAG,EAAEA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcD,SAAd,CADH,CAFL,eAKI,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAGhB,WAAW,CAACG,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,eAMQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANR,eAOI,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAGQ,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ;AAWH,CAjCD;;AAkCA,eAAejB,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport articleContent from './article-content';\r\nimport ArticlesList from '../components/ArticlesList';\r\nimport NotFoundPage from '../pages/NotFoundPage';\r\nimport CommentsList from '../components/CommentsList';\r\nimport UpvotesSection from '..components/UpvotesSection'\r\n\r\nconst ArticlePage = ({ match }) => {\r\n\r\n   \r\n\r\n    const name = match.params.name;\r\n    const article = articleContent.find(article => article.name === name)\r\n\r\nconst [articleInfo, setArticleInfo] = useState({upvotes:0, comments:[]});\r\n\r\nuseEffect(() => {\r\n    const fetchData = async () =>{\r\n        const result = await fetch(`/api/articles/${name}`);\r\n        const body = await result.json();\r\n        console.log(body);\r\n        setArticleInfo(body);\r\n    }\r\n        fetchData();\r\n},[name]);\r\n    if (!article) return <NotFoundPage />\r\n\r\n\r\n    const otherArticles = articleContent.filter(article => article.name !== name)\r\n    return (\r\n        <>\r\n            <h1>{article.title} article</h1>\r\n            {article.content.map((paragraph, key) => (\r\n                <p key={key}>{paragraph}</p>\r\n            ))}\r\n            <CommentsList comments ={articleInfo.comments}/>\r\n                <h3>Other Articles</h3>\r\n            <ArticlesList articles ={otherArticles} />\r\n        </>\r\n    );\r\n}\r\nexport default ArticlePage;"]},"metadata":{},"sourceType":"module"}